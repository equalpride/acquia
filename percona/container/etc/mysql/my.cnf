#
# This my.cnf template is for servers that are both database
# and web servers. It is called my.cnf.new-shared.erb in puppet because it
# is for servers that are shared between MySQL and Apache, which is
# orthogonal to "shared by multiple customers".
#
# IMPORTANT! Any changes made to this file should be reflected in
# my.cnf.new-dedicated.erb as well.
#

[client]
port                       = 3306
socket                     = /var/run/mysqld/mysqld.sock

# Using the --loose prefix because mysqlbinlog does not understand default-character-set.
loose-default-character-set = utf8

[mysqld_safe]
socket                     = /var/run/mysqld/mysqld.sock
nice                       = 0
open-files-limit           = 8192

[mysqld]
user                       = mysql
pid-file                   = /var/run/mysqld/mysqld.pid
socket                     = /var/run/mysqld/mysqld.sock
port                       = 3306
basedir                    = /usr
datadir                    = /var/lib/mysql
lc_messages_dir            = /usr/share/mysql
tmpdir                     = /mnt/tmp/mysql
skip-external-locking
# CL-14699 mitigate privilege escalation bug CVE-2016-6663
symbolic-links             = FALSE

# Default character set and collation
character-set-server       = utf8
collation-server           = utf8_general_ci

# Generic
key_buffer_size            = 20M             # MyISAM index cache, typically only used for MySQL system tables
table_open_cache           = 2500            # Table cache for file handles, etc.
thread_cache_size          = 200
max_allowed_packet         = 100M
max_connect_errors         = 9999999
default_storage_engine     = INNODB          # Set the default storage engine to InnoDB

# Query cache
query_cache_size           = 40M             # Total query cache size
query_cache_limit          = 5M              # Max result set size allowed in query cache
query_cache_min_res_unit   = 1024            # Minimum amount of memory that can be allocated in query cache
query_cache_strip_comments = on              # Percona: Strip out query comments because we put HTTP Request IDs into queries

# Time outs
wait_timeout               = 600             # Time out waiting for a new query. Set to 600 because we time out php at 600s
net_write_timeout          = 600             # Seconds to wait for a block to be written to a connection. See wait_timeout.
interactive_timeout        = 600             # The number of seconds the server waits for activity on an interactive connection before closing it. See wait_timeout.

# Slow query log
slow_query_log             = 1               # Turn on the slow query log
long_query_time            = 1               # Log any query that takes longer than 1 second in the slow query log
log_queries_not_using_indexes = 0            # Do not log queries faster than 1 second that are not using an index
# OPE-516 percona extra slow log features
# https://www.percona.com/doc/percona-server/5.5/diagnostics/slow_extended_55.html#log_slow_verbosity
log_slow_verbosity=full

# Per thread buffers
join_buffer_size           = 512K            # Per-thread, per-join pre-assigned buffer
read_buffer_size           = 512K            # Per-thread buffer for caching nested query results
read_rnd_buffer_size       = 512K            # Per-thread buffer for MyISAM table scans
sort_buffer_size           = 512K            # Per-thread buffer for sorting

# Calculated settings per instance

innodb_buffer_pool_size   = 530579456

# Set InnoDB thread concurrency to 2 * cpu cores
innodb_thread_concurrency  = 4


# To compute max connections, we take mysqld's total percentage of memory
# (40% on this Apache+MySQL server) and subtract all static buffers (key,
# query cache, log, and InnoDB). We then divide that by the dynamic buffers
# (in our case they are all 512k so we do 4x512k).
# Since most database connections tend to be sleeping connections we can add
# a safe number (150) to this baseline to avoid running out of connections
# prematurely and causing a failover.
#
# On a t1.micro with 615 MB, this computes that we can have -4
# max_connections... which is a bit of a problem. For now, set an arbitrary
# minimum of 4. More tuning is warranted.
max_connections            = 200

#####################
#INNODB Settings
####################
# Percona 5.5 optimizations:
#   - Quickly drop tables and prioritize other queries over the drops.
#   - Write page data for buffer pool to disk for warm cache at startup.

# Percona: innodb_lazy_drop_table defers the page eviction for better
# performance (deprecated in 5.5.30).
innodb_lazy_drop_table     = 1

# Percona: time between buffer pool dumps in seconds for automated restore on
# startup (deprecated in 5.6).
innodb_buffer_pool_restore_at_startup = 300
# End of Percona specific optimizations

# MySQL buffer pool instances. Helps reduce contentio on buffer pool.
innodb_buffer_pool_instances = 4
# Latest InnoDB file format that allows for table compression
innodb_file_format         = Barracuda
# Allow large index prefixes to support utf8mb4 better (CL-13749)
innodb_large_prefix

# ibdata1 table space settings
innodb_data_file_path      = ibdata1:10M:autoextend
# Determines the system methods InnoDB uses for flushing writes to disk
innodb_flush_method        = O_DIRECT
# InnoDB redo log file size
innodb_log_file_size       = 200M
# Number of InnoDB redo log files
innodb_log_files_in_group  = 3
# The size of the buffer InnoDB uses to write to the redo log files
innodb_log_buffer_size     = 8M

# Turn on query response time logging
query_response_time_stats  = ON

# innodb_flush_log_at_trx_commit:
#  0: Log buffer is written out to the log file once per second and the flush
#     to disk operation is performed on the log file, but nothing is done at a
#     transaction commit (fastest).
#  1: (default) Log buffer is written out to the log file at each transaction
#     commit and the flush to disk operation is performed on the log file
#     (slowest).
#  2: Log buffer is written out to the file at each commit, but the flush to
#     disk operation is not performed on it. However, the flushing on the log
#     file takes place once per second also when the value is 2. Note that the
#     once-per-second flushing is not 100% guaranteed to happen every second,
#     due to process scheduling issues (2nd fastest).
# Currently we're optimized for performance so we're using 0 which means no
# durability.

innodb_flush_log_at_trx_commit = 0


# Store each table space in a separate file
innodb_file_per_table


# Percona: Limit data dictionary cache size with percona (deprecated in 5.6)
innodb_dict_size_limit     = 256M

# Do not generate InnoDB index statistics for each table every time the information
# schema is queried
innodb_stats_on_metadata   = OFF


# Replication settings

# Addressing binlog corruption issues on AH
# If the value of this variable is greater than 0, the MySQL server
# synchronizes its binary log to disk (using fdatasync()) after every
# sync_binlog writes to the binary log. There is one write to the binary log
# per statement if autocommit is enabled, and one write per transaction
# otherwise.
sync_binlog                = 1
# Turn on the binary log by specifying the base filename
log-bin                    = binlog
# Retain the binlog files for 5 days. Since we purge binlogs every 6 hours
# through a cron job this setting has no impact.
expire_logs_days           = 5

# Report the hostname for slave identification
report-host                = ded-16510.prod.hosting.acquia.com
# Relay log file basename
relay-log                  = relaylog
# Relay log index file
relay-log-index            = relay-index
# Discard all existing relay logs on server startup and retrieve them from
# the master in case the are corrupt.
relay-log-recovery         = 1

# Replication filter to deal with a bug in XtraBackup
replicate-wild-ignore-table = mysql.ibbackup_binlog_marker

# We're using MySQL mixed mode replication to avoid replication issues that
# are inherent with SBR but not get the overhead from RBR.
# http://dev.mysql.com/doc/refman/5.5/en/binary-log-mixed.html
binlog_format              = mixed

# Do not log 1592 Unsafe replication warnings. They blow up the log since they result
# from the mk-table-checksum/pt-table-checksum tool. This option is Percona Server
# specific as MySQL has never addressed this.
log_warnings_suppress      = 1592

# Space auto_increments apart by 5. The offset is determined by the server role.
auto_increment_increment   = 5

[mysqldump]
# Buffer a line at a time
quick
quote-names
max_allowed_packet         = 100M

[mysql]
#no-auto-rehash # faster start of mysql but no tab completion

[isamchk]
key_buffer                 = 16M

# Added manually
innodb_file_format_max = Barracuda
innodb_ibuf_max_size   = 265273344
open_files_limit 		   = 8192
pseudo_thread_id       = 65544
sync_binlog            = 0
expire_logs_days       = 1

!includedir /etc/mysql/conf.d/
